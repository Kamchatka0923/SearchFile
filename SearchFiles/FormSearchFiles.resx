<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TC6pAAAAAElFTkSuQmCC
</value>
  </data>
</root>